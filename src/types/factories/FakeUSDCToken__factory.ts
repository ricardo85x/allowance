/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FakeUSDCToken, FakeUSDCTokenInterface } from "../FakeUSDCToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ammount",
        type: "uint256",
      },
    ],
    name: "GiveMeSome",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "approveAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f46616b65205553444320546f6b656e00000000000000000000000000000000008152506040518060400160405280600481526020017f5553444300000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000b8565b508060049080519060200190620000af929190620000b8565b505050620001cd565b828054620000c69062000168565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b600060028204905060018216806200018157607f821691505b602082108114156200019857620001976200019e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6115a680620001dd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b4114610226578063a457c2d714610244578063a9059cbb14610274578063dd62ed3e146102a4576100cf565b806339509351146101aa5780636ed1ab24146101da57806370a08231146101f6576100cf565b80630621472c146100d457806306fdde03146100f0578063095ea7b31461010e57806318160ddd1461013e57806323b872dd1461015c578063313ce5671461018c575b600080fd5b6100ee60048036038101906100e99190610dab565b6102d4565b005b6100f86102e5565b604051610105919061124f565b60405180910390f35b61012860048036038101906101239190610e5f565b610377565b6040516101359190611234565b60405180910390f35b610146610395565b6040516101539190611371565b60405180910390f35b61017660048036038101906101719190610e10565b61039f565b6040516101839190611234565b60405180910390f35b610194610497565b6040516101a1919061138c565b60405180910390f35b6101c460048036038101906101bf9190610e5f565b6104a0565b6040516101d19190611234565b60405180910390f35b6101f460048036038101906101ef9190610e9b565b61054c565b005b610210600480360381019061020b9190610dab565b610559565b60405161021d9190611371565b60405180910390f35b61022e6105a1565b60405161023b919061124f565b60405180910390f35b61025e60048036038101906102599190610e5f565b610633565b60405161026b9190611234565b60405180910390f35b61028e60048036038101906102899190610e5f565b61071e565b60405161029b9190611234565b60405180910390f35b6102be60048036038101906102b99190610dd4565b61073c565b6040516102cb9190611371565b60405180910390f35b6102e18162040000610377565b5050565b6060600380546102f4906114a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610320906114a1565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b5050505050905090565b600061038b6103846107c3565b84846107cb565b6001905092915050565b6000600254905090565b60006103ac848484610996565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006103f76107c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046e906112d1565b60405180910390fd5b61048b856104836107c3565b8584036107cb565b60019150509392505050565b60006012905090565b60006105426104ad6107c3565b8484600160006104bb6107c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461053d91906113c3565b6107cb565b6001905092915050565b6105563382610c17565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105b0906114a1565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc906114a1565b80156106295780601f106105fe57610100808354040283529160200191610629565b820191906000526020600020905b81548152906001019060200180831161060c57829003601f168201915b5050505050905090565b600080600160006106426107c3565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f690611331565b60405180910390fd5b61071361070a6107c3565b858584036107cb565b600191505092915050565b600061073261072b6107c3565b8484610996565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561083b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083290611311565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a290611291565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109899190611371565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fd906112f1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6d90611271565b60405180910390fd5b610a81838383610d77565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afe906112b1565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b9a91906113c3565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bfe9190611371565b60405180910390a3610c11848484610d7c565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90611351565b60405180910390fd5b610c9360008383610d77565b8060026000828254610ca591906113c3565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cfa91906113c3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d5f9190611371565b60405180910390a3610d7360008383610d7c565b5050565b505050565b505050565b600081359050610d9081611542565b92915050565b600081359050610da581611559565b92915050565b600060208284031215610dbd57600080fd5b6000610dcb84828501610d81565b91505092915050565b60008060408385031215610de757600080fd5b6000610df585828601610d81565b9250506020610e0685828601610d81565b9150509250929050565b600080600060608486031215610e2557600080fd5b6000610e3386828701610d81565b9350506020610e4486828701610d81565b9250506040610e5586828701610d96565b9150509250925092565b60008060408385031215610e7257600080fd5b6000610e8085828601610d81565b9250506020610e9185828601610d96565b9150509250929050565b600060208284031215610ead57600080fd5b6000610ebb84828501610d96565b91505092915050565b610ecd8161142b565b82525050565b6000610ede826113a7565b610ee881856113b2565b9350610ef881856020860161146e565b610f0181611531565b840191505092915050565b6000610f196023836113b2565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7f6022836113b2565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610fe56026836113b2565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061104b6028836113b2565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b60006110b16025836113b2565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111176024836113b2565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061117d6025836113b2565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006111e3601f836113b2565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b61121f81611457565b82525050565b61122e81611461565b82525050565b60006020820190506112496000830184610ec4565b92915050565b600060208201905081810360008301526112698184610ed3565b905092915050565b6000602082019050818103600083015261128a81610f0c565b9050919050565b600060208201905081810360008301526112aa81610f72565b9050919050565b600060208201905081810360008301526112ca81610fd8565b9050919050565b600060208201905081810360008301526112ea8161103e565b9050919050565b6000602082019050818103600083015261130a816110a4565b9050919050565b6000602082019050818103600083015261132a8161110a565b9050919050565b6000602082019050818103600083015261134a81611170565b9050919050565b6000602082019050818103600083015261136a816111d6565b9050919050565b60006020820190506113866000830184611216565b92915050565b60006020820190506113a16000830184611225565b92915050565b600081519050919050565b600082825260208201905092915050565b60006113ce82611457565b91506113d983611457565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561140e5761140d6114d3565b5b828201905092915050565b600061142482611437565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561148c578082015181840152602081019050611471565b8381111561149b576000848401525b50505050565b600060028204905060018216806114b957607f821691505b602082108114156114cd576114cc611502565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61154b81611419565b811461155657600080fd5b50565b61156281611457565b811461156d57600080fd5b5056fea264697066735822122003e167249fc9154dc9c11481167d423a74c058855019b321532745c0fdfb56be64736f6c63430008000033";

export class FakeUSDCToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FakeUSDCToken> {
    return super.deploy(overrides || {}) as Promise<FakeUSDCToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FakeUSDCToken {
    return super.attach(address) as FakeUSDCToken;
  }
  connect(signer: Signer): FakeUSDCToken__factory {
    return super.connect(signer) as FakeUSDCToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeUSDCTokenInterface {
    return new utils.Interface(_abi) as FakeUSDCTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeUSDCToken {
    return new Contract(address, _abi, signerOrProvider) as FakeUSDCToken;
  }
}
